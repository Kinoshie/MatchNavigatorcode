import 'package:flutter/material.dart';
import 'auth_service.dart';
import 'login_page.dart';
import 'signup_page.dart';
import 'profile_service.dart';
import 'profile_setup_page.dart';

class WelcomePage extends StatefulWidget {
  const WelcomePage({super.key});

  @override
  State<WelcomePage> createState() => _WelcomePageState();
}

class _WelcomePageState extends State<WelcomePage> {
  Future<void> _maybePromptProfile() async {
    final u = auth.currentUser;
    if (u != null && !profiles.hasProfile(u.username)) {
      await Navigator.push(
        context,
        MaterialPageRoute(builder: (_) => const ProfileSetupPage()),
      );
      if (mounted) setState(() {});
    }
  }

  @override
  void initState() {
    super.initState();
    // If we ever arrive already logged in, prompt once page is built.
    WidgetsBinding.instance.addPostFrameCallback((_) => _maybePromptProfile());
  }

  @override
  Widget build(BuildContext context) {
    final user = auth.currentUser;
    final hasProf = (user != null) ? profiles.hasProfile(user.username) : false;

    return Scaffold(
      body: Container(
        width: double.infinity,
        height: double.infinity,
        color: Colors.black, // keep or replace with your image
        child: Center(
          child: ConstrainedBox(
            constraints: const BoxConstraints(maxWidth: 420),
            child: Card(
              color: Colors.black.withOpacity(0.55),
              elevation: 8,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(20),
              ),
              child: Padding(
                padding: const EdgeInsets.all(24),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    const Text(
                      'Welcome Page',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 28,
                        fontWeight: FontWeight.bold,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 8),
                    Text(
                      user == null
                          ? 'You are not logged in.'
                          : hasProf
                          ? 'Logged in as ${user.username} (profile complete)'
                          : 'Logged in as ${user.username} (profile needed)',
                      style: const TextStyle(color: Colors.white70, fontSize: 16),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 24),

                    // Log in
                    SizedBox(
                      width: double.infinity,
                      child: ElevatedButton(
                        onPressed: () async {
                          await Navigator.push(
                            context,
                            MaterialPageRoute(builder: (_) => const LoginPage()),
                          );
                          if (!mounted) return;
                          setState(() {});            // refresh text
                          await _maybePromptProfile(); // 
                        },
                        child: const Text('Log in'),
                      ),
                    ),
                    const SizedBox(height: 12),

                    // Create account
                    SizedBox(
                      width: double.infinity,
                      child: OutlinedButton(
                        onPressed: () async {
                          await Navigator.push(
                            context,
                            MaterialPageRoute(builder: (_) => const SignUpPage()),
                          );
                          if (!mounted) return;
                          setState(() {});
                          await _maybePromptProfile(); // ðŸ‘ˆ auto open profile if missing
                        },
                        child: const Text('Create account'),
                      ),
                    ),
                    const SizedBox(height: 12),

                    // Sign out
                    SizedBox(
                      width: double.infinity,
                      child: TextButton(
                        onPressed: () async {
                          await auth.signOut();
                          if (mounted) {
                            ScaffoldMessenger.of(context).showSnackBar(
                              const SnackBar(content: Text('Signed out')),
                            );
                            setState(() {});
                          }
                        },
                        child: const Text('Sign out'),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}
